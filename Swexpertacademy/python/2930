def insert(x, p):
    global heap
    heap.append(x)
    if p<=1:
        return
    else:
        while(p>1 and heap[p//2]<x):
            heap[p], heap[p//2] = heap[p//2], heap[p]
            p//=2
        return
    return
def hpop(l):
    global heap
    print(heap[1], end=" ")
    heap[1] = heap[-1]
    heap.pop()
    l-=1
    p = 1
    t = l//2
    while(p<=t):
        #자식 없으면
        if p*2 >= l:
            return
        #자식 2개
        if p*2+1<l:
            if heap[p*2] < heap[p*2+1]:
                np = p*2+1
            else:
                np = p*2
        #자식 1개
        else:
            np = p*2

        if heap[np] <= heap[p]:
            return
        heap[np], heap[p] = heap[p], heap[np]
        p = np


for tc in range(int(input())):
    print(f'#{tc+1}', end=" ")
    heap = [0]
    l = 1
    for _ in range(int(input())):
        compute = input()
        if compute[0]=='1':
            insert(int(compute[2:]), l)
            l+=1
        else:
            if l<=1:
                print(-1, end=" ")
            elif l==2:
                heap.pop()
                l-=1
            else:
                hpop(l)
                l-=1
    print()
